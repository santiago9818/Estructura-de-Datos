# Estructura-de-Datos
import static java.lang.Integer.max;
import static java.lang.Integer.min;

public class SuperEnteros {

    public SuperEnteros(){
        
    
        
    }
    public static void main(String[] args) {
        SuperEnteros se = new SuperEnteros();
        String number1 = "111111111";
        String number2=  "222222222222";
        
        int[]num1 = se.convertToIntArray(number1);
        int[]num2 = se.convertToIntArray(number2);
        int[]result = se.multiplicacion(num1 , num2);
        for(int i= 1; i< result.length; i++)
        {
            System.out.print(result [result.length - i] +"");   
        }
        
    }
    
    public int[] convertToIntArray(String number)
    {
        int [] convertion = new int [number.length()];
        for(int i = 0; i < number.length(); i++)
        {
            convertion[number.length()- i -1 ] = Integer.parseInt(number.substring(i, i+1));// se invierte los numeros
        }
        return convertion;
    }
    
   public int max(int a,int b)
   {
       if(a>b)
        return a;            
     else
     return b;
       
   }
   public int min(int a,int b)
   {
    if(a<b)
     return a;
    else
      return b;
   }
    
    public int [] suma(int[] number1, int [] number2)
    {
        int [] result = new int [max(number1.length, number2.length) + 1];
        int i, aux;
        
        for(i =0; i< min(number1.length, number2.length);i++);
        {
            aux= (number1[i] + number2[i]) / 10;
            result[i] += (number1[i] + number2[i]) % 10;
            result[i + 1] += aux;
        }
       if(number1.length>number2.length)
        {
         for(int j=i;j<number1.length;j++)
         {
             result[j]+= number1[j];
         }   
            
        }
        else
        {
          if(number2.length>number1.length)
          {
           for(int j=i;j<number2.length;j++)
           {
             result[j]+= number2[j];
           }   
          }
        }
        return result;
    }
    
    public int [] resta (int[] number1, int [] number2)
    {
        int [] result = new int [max(number1.length, number2.length) ];
        int i;
        
        for(i=0;i<min(number1.length, number2.length); i++)
        {
            if(number1[i] < number2[i])
            {
                result [i+1]-=1;
                result[i] = (number1[i] + 10) - number2[i];
            }
            else
                result[i] = number1[i] - number2[i];
        }
        if(number1.length > number2.length)
        {
            for(int j = i; j< number1.length; j++)
            {
                result[j] += number1[j];
            }
        }
        else
        {
            if(number2.length > number1.length)
            {
                for(int j = i; j < number2.length; j++)
                {
                    result[j] -= number2[j];
                }
            }
        }
        return result;
    }
    
    public int [] multiplicacion(int[] number1, int [] number2)
    {
        int [] result = new int [max(number1.length, number2.length) + 1];
        int i, aux;
        
        for(i =0; i< min(number1.length, number2.length);i++);
        {
            aux= (number1[i] * number2[i]) ;
            result[i] = (number1[i] * number2[i]) ;
            result[i + 1] = aux;
        }
       if(number1.length>number2.length)
        {
         for(int j=i;j<number1.length;j++)
         {
             result[j]*= number1[j];
         }   
            
        }
        else
        {
          if(number2.length>number1.length)
          {
           for(int j=i;j<number2.length;j++)
           {
             result[j]*= number2[j];
           }   
          }
        }
        return result;
    }
    public int [] fibonacci(int[] number1)
    {
        int [] result = new int [number1.length];
        int i, a=1,b=0;
        
        for(i =0; i<=number1.length;i++);
        {
            if(number1.length<0)
            {
                System.out.println("no existe la serie de fibonacci");  
            }
            else
            {
             result[i]= a + b ;
              b=a;
              a=result[i];
            }
            
        }
       return result; 
    }
    public int factorial(int[] number1)
    {
        int i, factorial=1;
     int [] result = new int [number1.length];
     if(number1.length<1)
     {
      return 1; 
     }
     else
     {
      for(i=1;i<=number1.length;i++)
      {
       result[i]=factorial;
          result[i]=result[i]*i;  
          
      }
       return result[i];
     }
    }
   
    
}
